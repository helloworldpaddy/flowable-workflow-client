# Debug mode disabled for production
debug: false

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${SERVER_CONTEXT_PATH:/api}
  tomcat:
    additional-tld-skip-patterns: "*.jar"
    apr:
      enabled: false

spring:
  application:
    name: cms-flowable-backend
  
  profiles:
    active: dev
    
  web:
    resources:
      add-mappings: true
      static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/

  # Single DataSource for both CMS and Flowable
  datasource:
    url: ${DB_URL:jdbc:postgresql://ep-wispy-haze-a5xy9c41-pooler.us-east-2.aws.neon.tech/workflow?sslmode=require&currentSchema=cms_flowable_workflow}
    username: ${DB_USERNAME:wf_owner}
    password: ${DB_PASSWORD:npg_7hrdeDKf6WyC}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      pool-name: CMS-HikariCP
      auto-commit: false
        
  # JPA Configuration for Business Tables
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none # Keep 'none' if you manage schema manually or with Flyway/Liquibase for your JPA entities
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false # You can set this to true temporarily if you want to see SQL queries
    properties:
      hibernate:
        default_schema: ${DB_SCHEMA:cms_flowable_workflow}
        format_sql: true
        jdbc:
          time_zone: UTC
        order_inserts: true
        order_updates: true
        jdbc.batch_size: 25
  data:
    jpa:
      repositories:
        query-lookup-strategy: create-if-not-found

  # Liquibase Configuration
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    default-schema: ${DB_SCHEMA:cms_flowable_workflow}
    enabled: true

# Flowable Configuration
flowable:
  # Database Configuration
  database-schema-update: true # This should be true for Flowable to create/update its own tables
  database-type: postgres
  database-schema: ${DB_SCHEMA:cms_flowable_workflow}
  check-process-definitions: false
  deployment-mode: default
  
  # Process Engine Configuration (BPMN) - Enabled by default if starter is present
  process:
    # Explicitly enabled for clarity, though it's usually true by default with the starter
    enabled: true 
    definition-cache-limit: 10
    enable-safe-xml-parsing: false
    resource-location: classpath*:/processes/
    resource-suffixes:
      - .bpmn
      - .bpmn20.xml
    deployment-mode: default
    
  # CMMN Engine Configuration - DISABLED
  cmmn:
    enabled: false # Set to false to disable CMMN engine
    resource-location: classpath*:/cmmn/ # These properties are now effectively ignored
    resource-suffixes: 
      - .cmmn
      - .cmmn11
      - .cmmn.xml
    create-deployment-for-changed-only: true
    
  # DMN Engine Configuration - ENABLED
  dmn:
    enabled: true # Re-enabled with KIE dependencies
    resource-location: classpath*:/dmn/
    resource-suffixes:
      - .dmn
      - .dmn11  
      - .dmn.xml
    strict-mode: false
    deployment-mode: single-resource
    
  # Form Engine Configuration - DISABLED
  form:
    enabled: false # Set to false to disable Form engine
    resource-location: classpath*:/forms/ # These properties are now effectively ignored
    resource-suffixes:
      - .form
      
  # Content Engine Configuration - DISABLED
  content:
    enabled: false # Set to false to disable Content engine
    storage: # These properties are now effectively ignored
      create-root: true
      root-folder: flowable-content
      
  # History Configuration
  history-level: full
  
  # Async Executor Configuration
  async:
    executor:
      activate: true
      core-pool-size: 8
      max-pool-size: 16
      queue-capacity: 100
      thread-name-prefix: flowable-async-
      
  # REST API Configuration
  rest:
    app:
      authentication-mode: verify-privilege
      enable-cors: true
      cors:
        enabled: true
        allowed-origins: "${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}"
        allowed-methods: GET,POST,PUT,DELETE,OPTIONS
        allowed-headers: "*"
        allow-credentials: true
        max-age: 3600

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:mySecretKey12345678901234567890123456789012345678901234567890}
  expiration: ${JWT_EXPIRATION:86400000} # 24 hours
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7 days

# Cerbos Configuration
cerbos:
  host: ${CERBOS_HOST:localhost}
  port: ${CERBOS_PORT:3593}
  tls:
    enabled: ${CERBOS_TLS_ENABLED:false}
  fallback:
    enabled: ${CERBOS_FALLBACK_ENABLED:true}

# Logging Configuration - Handled by logback-spring.xml
# All logs go to logs/cms-flowable.log with rolling policy
# Environment variables for log levels:
# APP_LOG_LEVEL: Application log level (default: INFO)
# FLOWABLE_LOG_LEVEL: Flowable engine log level (default: INFO) 
# SQL_LOG_LEVEL: SQL query log level (default: WARN)
logging:
  config: classpath:logback-spring.xml

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,flowable,httptrace
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
    flowable:
      enabled: true

# Application Specific Configuration
cms:
  database:
    schema: ${DB_SCHEMA:cms_flowable_workflow}
  case:
    number-prefix: "${CASE_NUMBER_PREFIX:CMS}"
    auto-assignment: ${CASE_AUTO_ASSIGNMENT:true}
    max-allegations-per-case: ${CASE_MAX_ALLEGATIONS:10}
  notification:
    email:
      enabled: ${EMAIL_ENABLED:false}
      smtp:
        host: ${EMAIL_SMTP_HOST:localhost}
        port: ${EMAIL_SMTP_PORT:587}
    sms:
      enabled: ${SMS_ENABLED:false}
  file:
    upload:
      max-size: ${FILE_UPLOAD_MAX_SIZE:10MB}
      allowed-types: ${FILE_UPLOAD_ALLOWED_TYPES:pdf,doc,docx,txt,jpg,png}
      storage-path: ${FILE_UPLOAD_STORAGE_PATH:/app/uploads}
  deployment:
    environment: ${DEPLOYMENT_ENV:development}
    base-url: ${BASE_URL:http://localhost}
